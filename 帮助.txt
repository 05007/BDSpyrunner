// 函数名：log
// 功能：标准输出流打印消息
// 参数个数：1个
// 参数类型：字符串
// 参数详解：待输出至标准流字符串
[例] mc.log('你好 js')

// 函数名：logout
// 功能：发送一条命令输出消息（可被拦截）
// 参数个数：1个
// 参数类型：字符串
// 参数详解：cmdout - 待发送的命令输出字符串
[例] mc.logout('执行结果=正确')

// 函数名：setCommandDescribe
// 功能：设置一个全局指令说明
// 参数个数：2个
// 参数类型：字符串，字符串
// 参数详解：cmd - 命令，description - 命令说明
// 备注：延期注册的情况，可能不会改变客户端界面
[例] mc.setCommandDescribe('testcase', '这是一个测试用例指令说明')

// 函数名：setListener
// 功能：注册玩家事件加载前监听器
// 参数个数：2个
// 参数类型：整数，函数对象
// 参数详解：key - 注册用关键字，func - 供事件触发时的回调函数对象
[例] mc.setListener(1, a)

// 函数名：runcmd
// 功能：执行后台指令
// 参数个数：1个
// 参数类型：字符串
// 参数详解：cmd - 语法正确的MC指令
// 返回值：是否正常执行
[例] mc.runcmd('me 你好 js')

// 函数名：getOnLinePlayers
// 功能：获取在线玩家列表
// 参数个数：0个
// 返回值：玩家列表的字典
[例] mc.getOnLinePlayers()

// 函数名：getStructure
// 功能：获取一个结构
// 参数个数：5个
// 参数类型：整型，字符串，字符串，布尔型，布尔型
// 参数详解：dimensionid - 地图维度，posa - 坐标JSON字符串，posb - 坐标JSON字符串，exent - 是否导出实体，exblk - 是否导出方块
// 返回值：结构json字符串
[例] mc.getStructure(0, '{"x":0, "y":4, "z":0}', '{"x":10, "y":14, "z":10}', false, true)

// 函数名：setStructure
// 功能：设置一个结构到指定位置
// 参数个数：6个
// 参数类型：字符串，整型，字符串，整型，布尔型，布尔型
// 参数详解：strnbt - 结构JSON字符串，dimensionid - 地图维度，posa - 起始点坐标JSON字符串，rot - 旋转类型，exent - 是否导入实体，exblk - 是否导入方块
// 返回值：是否设置成功
[例] mc.setStructure(fileReadAllText('data.json'), 0, '{"x":0, "y":4, "z":0}', 0, true, true)

// 函数名：reName
// 功能：重命名一个指定的玩家名
// 参数个数：2个
// 参数类型：字符串，字符串
// 参数详解：uuid - 在线玩家的uuid字符串，newName - 新的名称
// 返回值：是否命名成功
// （备注：该函数可能不会变更客户端实际显示名）
[例] mc.reName('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', '请叫我LiuXiaohua')

// 函数名：getPlayerAbilities
// 功能：获取玩家能力表
// 参数个数：1个
// 参数类型：字符串
// 参数详解：uuid - 在线玩家的uuid字符串
// 返回值：能力json字符串
[例] let a = getPlayerAbilities('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9')

// 函数名：setPlayerAbilities
// 功能：设置玩家能力表
// 参数个数：2个
// 参数类型：字符串，字符串
// 参数详解：uuid - 在线玩家的uuid字符串，newAbilities - 新能力json数据字符串
// 返回值：是否设置成功
// （备注：该函数可能不会变更客户端实际显示能力）
[例] mc.setPlayerAbilities('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', '{"opencontainers": false}')

// 函数名：getPlayerAttributes
// 功能：获取玩家属性表
// 参数个数：1个
// 参数类型：字符串
// 参数详解：uuid - 在线玩家的uuid字符串
// 返回值：属性json字符串
[例] mc.getPlayerAttributes('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9')

// 函数名：setPlayerAttributes
// 功能：设置玩家属性默认值表
// 参数个数：2个
// 参数类型：字符串，字符串
// 参数详解：uuid - 在线玩家的uuid字符串，newAttributes - 新属性默认值json数据字符串
// 返回值：是否设置成功
// （备注：该函数可能不会变更客户端实际显示值；该函数可能导致玩家死后重生不会恢复初始属性）
[例] mc.setPlayerAttributes('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', '{"attack_damage": 9999}')

// 函数名：setPlayerTempAttributes
// 功能：设置玩家属性临时值表
// 参数个数：2个
// 参数类型：字符串，字符串
// 参数详解：uuid - 在线玩家的uuid字符串，newTempAttributes - 新属性临时值json数据字符串
// 返回值：是否设置成功
// （备注：该函数可能不会变更客户端实际显示值）
[例] mc.setPlayerTempAttributes('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', '{"hunger": 10}')

// 函数名：getPlayerMaxAttributes
// 功能：获取玩家属性上限值表
// 参数个数：1个
// 参数类型：字符串
// 参数详解：uuid - 在线玩家的uuid字符串
// 返回值：属性上限值json字符串
[例] let m = getPlayerMaxAttributes('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9')

// 函数名：setPlayerMaxAttributes
// 功能：设置玩家属性上限值表
// 参数个数：2个
// 参数类型：字符串，字符串
// 参数详解：uuid - 在线玩家的uuid字符串，newMaxAttributes - 新属性上限值json数据字符串
// 返回值：是否设置成功
// （备注：该函数可能不会变更客户端实际显示值）
[例] mc.setPlayerMaxAttributes('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', '{"maxhealth": 200}')

// 函数名：getPlayerItems
// 功能：获取玩家所有物品列表
// 参数个数：1个
// 参数类型：字符串
// 参数详解：uuid - 在线玩家的uuid字符串
// 返回值：物品列表json字符串
[例] mc.getPlayerItems('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9')

// 函数名：getPlayerSelectedItem
// 功能：获取玩家当前选中项信息
// 参数个数：1个
// 参数类型：字符串
// 参数详解：uuid - 在线玩家的uuid字符串
// 返回值：当前选中项信息json字符串
[例] let i = getPlayerSelectedItem('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9')

// 函数名：setPlayerItems
// 功能：设置玩家所有物品列表
// 参数个数：2个
// 参数类型：字符串，字符串
// 参数详解：uuid - 在线玩家的uuid字符串，newItems - 新物品列表json数据字符串
// 返回值：是否设置成功
// （备注：特定条件下可能不会变更游戏内实际物品）
[例] mc.setPlayerItems('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9','{"Offhand":{"tt":9,"tv":[{"tt":10,"tv":[{"ck":"Count","cv":{"tt":1,"tv":1}},{"ck":"Damage","cv":{"tt":2,"tv":0}},{"ck":"Name","cv":{"tt":8,"tv":"minecraft:trident"}},{"ck":"tag","cv":{"tt":10,"tv":[{"ck":"ench","cv":{"tt":9,"tv":[{"tt":10,"tv":[{"ck":"id","cv":{"tt":2,"tv":7}},{"ck":"lvl","cv":{"tt":2,"tv":8888}}]}]}}]}}]}]}}')

// 函数名：addPlayerItemEx
// 功能：增加玩家一个物品
// 参数个数：2个
// 参数类型：字符串，字符串
// 参数详解：uuid - 在线玩家的uuid字符串，item - 物品json数据字符串
// 返回值：是否添加成功
// （备注：特定条件下可能不会变更游戏内实际物品）
[例] mc.setPlayerItems('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', '{"tt":10,"tv":[{"ck":"Count","cv":{"tt":1,"tv":1}},{"ck":"Damage","cv":{"tt":2,"tv":0}},{"ck":"Name","cv":{"tt":8,"tv":"minecraft:trident"}},{"ck":"tag","cv":{"tt":10,"tv":[{"ck":"ench","cv":{"tt":9,"tv":[{"tt":10,"tv":[{"ck":"id","cv":{"tt":2,"tv":10}},{"ck":"lvl","cv":{"tt":2,"tv":9999}}]}]}}]}}]}')

// 函数名：addPlayerItem
// 功能：增加玩家一个物品
// 参数个数：4个
// 参数类型：字符串
// 参数详解：uuid - 在线玩家的uuid字符串，id - 物品id值，aux - 物品特殊值，count - 数量
// 返回值：是否增加成功
// （备注：特定条件下可能不会变更游戏内实际物品）
[例] mc.addPlayerItem('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', 9, 0, 32)

// 函数名：getPlayerEffects
// 功能：获取玩家所有效果列表
// 参数个数：1个
// 参数类型：字符串
// 参数详解：uuid - 在线玩家的uuid字符串
// 返回值：效果列表json字符串
[例] let e = getPlayerEffects('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9')

// 函数名：setPlayerEffects
// 功能：设置玩家所有效果列表
// 参数个数：2个
// 参数类型：字符串，字符串
// 参数详解：uuid - 在线玩家的uuid字符串，newEffects - 新效果列表json数据字符串
// 返回值：是否设置成功
[例] mc.setPlayerEffects('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', '{"tt":9,"tv":[{"tt":10,"tv":[{"ck":"Ambient","cv":{"tt":1,"tv":0}},{"ck":"Amplifier","cv":{"tt":1,"tv":0}},{"ck":"DisplayOnScreenTextureAnimation","cv":{"tt":1,"tv":0}},{"ck":"Duration","cv":{"tt":3,"tv":3461}},{"ck":"DurationEasy","cv":{"tt":3,"tv":3461}},{"ck":"DurationHard","cv":{"tt":3,"tv":3461}},{"ck":"DurationNormal","cv":{"tt":3,"tv":3461}},{"ck":"Id","cv":{"tt":1,"tv":16}},{"ck":"ShowParticles","cv":{"tt":1,"tv":1}}]}]}')

// 函数名：setPlayerBossBar
// 功能：设置玩家自定义血条
// 参数个数：3个
// 参数类型：字符串，字符串，浮点型
// 参数详解：uuid - 在线玩家的uuid字符串，title - 血条标题，percent - 血条百分比
// 返回值：是否设置成功
[例] mc.setPlayerBossBar('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', '欢迎来到梦之故里', 1.00)

// 函数名：removePlayerBossBar
// 功能：清除玩家自定义血条
// 参数个数：1个
// 参数类型：字符串
// 参数详解：uuid - 在线玩家的uuid字符串
// 返回值：是否清除成功
[例] mc.removePlayerBossBar('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9')

// 函数名：setPlayerSidebar
// 功能：设置玩家自定义侧边栏临时计分板
// 参数个数：3个
// 参数类型：字符串，字符串，字符串
// 参数详解：uuid - 在线玩家的uuid字符串，title - 侧边栏标题，list - 列表字符串数组
// 返回值：是否设置成功
// （注：列表总是从第1行开始，总计不超过15行）
[例] mc.setPlayerSidebar('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', '自定义侧边栏', '["第一行", "第二行", "我在哪行?    "]')

// 函数名：removePlayerSidebar
// 功能：清除玩家自定义侧边栏
// 参数个数：1个
// 参数类型：字符串
// 参数详解：uuid - 在线玩家的uuid字符串
// 返回值：是否清除成功
[例] mc.removePlayerSidebar('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9')

// 函数名：getPlayerPermissionAndGametype
// 功能：获取玩家权限与游戏模式
// 参数个数：1个
// 参数类型：字符串
// 参数详解：uuid - 在线玩家的uuid字符串
// 返回值：权限与模式的json字符串
[例] mc.getPlayerPermissionAndGametype('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9')

// 函数名：setPlayerPermissionAndGametype
// 功能：设置玩家权限与游戏模式
// 参数个数：2个
// 参数类型：字符串，字符串
// 参数详解：uuid - 在线玩家的uuid字符串，newModes - 新权限或模式json数据字符串
// 返回值：是否设置成功
// （备注：特定条件下可能不会变更游戏内实际能力）
[例] mc.setPlayerPermissionAndGametype('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', '{"gametype" : 3}')

// 函数名：selectPlayer
// 功能：查询在线玩家基本信息
// 参数个数：1个
// 参数类型：字符串
// 参数详解：uuid - 在线玩家的uuid字符串
// 返回值：玩家基本信息json字符串
[例] let e = selectPlayer('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9')

// 函数名：transferserver
// 功能：传送玩家至指定服务器
// 参数个数：3个
// 参数类型：字符串，字符串，整型
// 参数详解：uuid - 在线玩家的uuid字符串，addr - 待传服务器，port - 端口
// 返回值：是否传送成功
[例] mc.transferserver('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', 'www.xiafox.com', 19132)

// 函数名：teleport
// 功能：传送玩家至指定坐标和维度
// 参数个数：5个
// 参数类型：字符串，浮点型，浮点型，浮点型，整型
// 参数详解：uuid - 在线玩家的uuid字符串，X - x，Y - y，Z - z，dimensionid - 维度ID
// 返回值：是否传送成功
[例] mc.teleport('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', 10, 99, 10, 2)

// 函数名：talkAs
// 功能：模拟玩家发送一个文本
// 参数个数：2个
// 参数类型：字符串，字符串
// 参数详解：uuid - 在线玩家的uuid字符串，msg - 待模拟发送的文本
// 返回值：是否发送成功
[例] mc.talkAs('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', '你好 js')

// 函数名：runcmdAs
// 功能：模拟玩家执行一个指令
// 参数个数：2个
// 参数类型：字符串，字符串
// 参数详解：uuid - 在线玩家的uuid字符串，cmd - 待模拟执行的指令
// 返回值：是否发送成功
[例] mc.runcmdAs('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', '/me 你好 js')

// 函数名：sendForm
// 功能：向指定的玩家发送一个自定义表单
// 参数个数：2个
// 参数类型：字符串，字符串
// 参数详解：uuid - 在线玩家的uuid字符串，json - 自定义表单的json字符串（要使用自定义表单类型，参考nk、pm格式或minebbs专栏）
// 返回值：创建的表单id，为 0 表示发送失败
[例] mc.sendForm('8f976e22-78bc-3fe1-8ee5-cf5ff56347b9', '{"content":[{"type":"label","text":"这是一个文本标签"},{"placeholder":"水印文本","default":"","type":"input","text":""},{"default":true,"type":"toggle","text":"开关~或许是吧"},{"min":0.0,"max":10.0,"step":2.0,"default":3.0,"type":"slider","text":"游标滑块！？"},{"default":1,"steps":["Step 1","Step 2","Step 3"],"type":"step_slider","text":"矩阵滑块？!"},{"default":1,"options":["Option 1","Option 2","Option 3"],"type":"dropdown","text":"如你所见，下拉框"}], "type":"custom_form","title":"这是一个自定义窗体"}')

// 函数名：setTimeout
// 功能：延时执行一条指令
// 参数个数：2个
// 参数类型：字符串/函数，整型
// 参数详解：code - 待延时执行的指令字符串/函数对象，millisec - 延时毫秒数
[例] setTimeout('log("你好 js")', 1000)